<?php
/**
 * CustomerActivity
 *
 * PHP version 5
 *
 * @category Class
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Advantage Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Advantage Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Advantage\Client\Model;

use \ArrayAccess;
use \Advantage\Client\ObjectSerializer;

/**
 * CustomerActivity Class Doc Comment
 *
 * @category Class
 * @description Contains all of the information about a Customer Activity
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerActivity implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomerActivity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'system_name' => 'string',
        'product_type' => 'string',
        'activity_id' => 'string',
        'term_number' => 'int',
        'activity_sequence' => 'int',
        'item_number' => 'string',
        'customer_number' => 'string',
        'address_code' => 'string',
        'activity_status' => 'string',
        'status_description' => 'string',
        'sub_reference' => 'string',
        'agreement_id' => 'string',
        'customer_po_number' => 'string',
        'owning_organization' => 'string',
        'original_order_number' => 'string',
        'promotion_code' => 'string',
        'promotion_choice' => 'string',
        'billing_status' => 'string',
        'billing_status_description' => 'string',
        'final_expire_date' => '\DateTime',
        'item_description' => 'string',
        'control_group_date' => '\DateTime',
        'control_group_id' => 'string',
        'membership_organization' => 'string',
        'membership_category' => 'string',
        'circulation_status' => 'string',
        'circulation_status_description' => 'string',
        'rate' => 'double',
        'remaining_liability' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'system_name' => null,
        'product_type' => null,
        'activity_id' => null,
        'term_number' => 'int32',
        'activity_sequence' => 'int32',
        'item_number' => null,
        'customer_number' => null,
        'address_code' => null,
        'activity_status' => null,
        'status_description' => null,
        'sub_reference' => null,
        'agreement_id' => null,
        'customer_po_number' => null,
        'owning_organization' => null,
        'original_order_number' => null,
        'promotion_code' => null,
        'promotion_choice' => null,
        'billing_status' => null,
        'billing_status_description' => null,
        'final_expire_date' => 'date-time',
        'item_description' => null,
        'control_group_date' => 'date-time',
        'control_group_id' => null,
        'membership_organization' => null,
        'membership_category' => null,
        'circulation_status' => null,
        'circulation_status_description' => null,
        'rate' => 'double',
        'remaining_liability' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'system_name' => 'SystemName',
        'product_type' => 'ProductType',
        'activity_id' => 'ActivityId',
        'term_number' => 'TermNumber',
        'activity_sequence' => 'ActivitySequence',
        'item_number' => 'ItemNumber',
        'customer_number' => 'CustomerNumber',
        'address_code' => 'AddressCode',
        'activity_status' => 'ActivityStatus',
        'status_description' => 'StatusDescription',
        'sub_reference' => 'SubReference',
        'agreement_id' => 'AgreementId',
        'customer_po_number' => 'CustomerPoNumber',
        'owning_organization' => 'OwningOrganization',
        'original_order_number' => 'OriginalOrderNumber',
        'promotion_code' => 'PromotionCode',
        'promotion_choice' => 'PromotionChoice',
        'billing_status' => 'BillingStatus',
        'billing_status_description' => 'BillingStatusDescription',
        'final_expire_date' => 'FinalExpireDate',
        'item_description' => 'ItemDescription',
        'control_group_date' => 'ControlGroupDate',
        'control_group_id' => 'ControlGroupId',
        'membership_organization' => 'MembershipOrganization',
        'membership_category' => 'MembershipCategory',
        'circulation_status' => 'CirculationStatus',
        'circulation_status_description' => 'CirculationStatusDescription',
        'rate' => 'Rate',
        'remaining_liability' => 'RemainingLiability'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'system_name' => 'setSystemName',
        'product_type' => 'setProductType',
        'activity_id' => 'setActivityId',
        'term_number' => 'setTermNumber',
        'activity_sequence' => 'setActivitySequence',
        'item_number' => 'setItemNumber',
        'customer_number' => 'setCustomerNumber',
        'address_code' => 'setAddressCode',
        'activity_status' => 'setActivityStatus',
        'status_description' => 'setStatusDescription',
        'sub_reference' => 'setSubReference',
        'agreement_id' => 'setAgreementId',
        'customer_po_number' => 'setCustomerPoNumber',
        'owning_organization' => 'setOwningOrganization',
        'original_order_number' => 'setOriginalOrderNumber',
        'promotion_code' => 'setPromotionCode',
        'promotion_choice' => 'setPromotionChoice',
        'billing_status' => 'setBillingStatus',
        'billing_status_description' => 'setBillingStatusDescription',
        'final_expire_date' => 'setFinalExpireDate',
        'item_description' => 'setItemDescription',
        'control_group_date' => 'setControlGroupDate',
        'control_group_id' => 'setControlGroupId',
        'membership_organization' => 'setMembershipOrganization',
        'membership_category' => 'setMembershipCategory',
        'circulation_status' => 'setCirculationStatus',
        'circulation_status_description' => 'setCirculationStatusDescription',
        'rate' => 'setRate',
        'remaining_liability' => 'setRemainingLiability'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'system_name' => 'getSystemName',
        'product_type' => 'getProductType',
        'activity_id' => 'getActivityId',
        'term_number' => 'getTermNumber',
        'activity_sequence' => 'getActivitySequence',
        'item_number' => 'getItemNumber',
        'customer_number' => 'getCustomerNumber',
        'address_code' => 'getAddressCode',
        'activity_status' => 'getActivityStatus',
        'status_description' => 'getStatusDescription',
        'sub_reference' => 'getSubReference',
        'agreement_id' => 'getAgreementId',
        'customer_po_number' => 'getCustomerPoNumber',
        'owning_organization' => 'getOwningOrganization',
        'original_order_number' => 'getOriginalOrderNumber',
        'promotion_code' => 'getPromotionCode',
        'promotion_choice' => 'getPromotionChoice',
        'billing_status' => 'getBillingStatus',
        'billing_status_description' => 'getBillingStatusDescription',
        'final_expire_date' => 'getFinalExpireDate',
        'item_description' => 'getItemDescription',
        'control_group_date' => 'getControlGroupDate',
        'control_group_id' => 'getControlGroupId',
        'membership_organization' => 'getMembershipOrganization',
        'membership_category' => 'getMembershipCategory',
        'circulation_status' => 'getCirculationStatus',
        'circulation_status_description' => 'getCirculationStatusDescription',
        'rate' => 'getRate',
        'remaining_liability' => 'getRemainingLiability'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['system_name'] = isset($data['system_name']) ? $data['system_name'] : null;
        $this->container['product_type'] = isset($data['product_type']) ? $data['product_type'] : null;
        $this->container['activity_id'] = isset($data['activity_id']) ? $data['activity_id'] : null;
        $this->container['term_number'] = isset($data['term_number']) ? $data['term_number'] : null;
        $this->container['activity_sequence'] = isset($data['activity_sequence']) ? $data['activity_sequence'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['customer_number'] = isset($data['customer_number']) ? $data['customer_number'] : null;
        $this->container['address_code'] = isset($data['address_code']) ? $data['address_code'] : null;
        $this->container['activity_status'] = isset($data['activity_status']) ? $data['activity_status'] : null;
        $this->container['status_description'] = isset($data['status_description']) ? $data['status_description'] : null;
        $this->container['sub_reference'] = isset($data['sub_reference']) ? $data['sub_reference'] : null;
        $this->container['agreement_id'] = isset($data['agreement_id']) ? $data['agreement_id'] : null;
        $this->container['customer_po_number'] = isset($data['customer_po_number']) ? $data['customer_po_number'] : null;
        $this->container['owning_organization'] = isset($data['owning_organization']) ? $data['owning_organization'] : null;
        $this->container['original_order_number'] = isset($data['original_order_number']) ? $data['original_order_number'] : null;
        $this->container['promotion_code'] = isset($data['promotion_code']) ? $data['promotion_code'] : null;
        $this->container['promotion_choice'] = isset($data['promotion_choice']) ? $data['promotion_choice'] : null;
        $this->container['billing_status'] = isset($data['billing_status']) ? $data['billing_status'] : null;
        $this->container['billing_status_description'] = isset($data['billing_status_description']) ? $data['billing_status_description'] : null;
        $this->container['final_expire_date'] = isset($data['final_expire_date']) ? $data['final_expire_date'] : null;
        $this->container['item_description'] = isset($data['item_description']) ? $data['item_description'] : null;
        $this->container['control_group_date'] = isset($data['control_group_date']) ? $data['control_group_date'] : null;
        $this->container['control_group_id'] = isset($data['control_group_id']) ? $data['control_group_id'] : null;
        $this->container['membership_organization'] = isset($data['membership_organization']) ? $data['membership_organization'] : null;
        $this->container['membership_category'] = isset($data['membership_category']) ? $data['membership_category'] : null;
        $this->container['circulation_status'] = isset($data['circulation_status']) ? $data['circulation_status'] : null;
        $this->container['circulation_status_description'] = isset($data['circulation_status_description']) ? $data['circulation_status_description'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['remaining_liability'] = isset($data['remaining_liability']) ? $data['remaining_liability'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets system_name
     *
     * @return string
     */
    public function getSystemName()
    {
        return $this->container['system_name'];
    }

    /**
     * Sets system_name
     *
     * @param string $system_name System Name
     *
     * @return $this
     */
    public function setSystemName($system_name)
    {
        $this->container['system_name'] = $system_name;

        return $this;
    }

    /**
     * Gets product_type
     *
     * @return string
     */
    public function getProductType()
    {
        return $this->container['product_type'];
    }

    /**
     * Sets product_type
     *
     * @param string $product_type Product Type
     *
     * @return $this
     */
    public function setProductType($product_type)
    {
        $this->container['product_type'] = $product_type;

        return $this;
    }

    /**
     * Gets activity_id
     *
     * @return string
     */
    public function getActivityId()
    {
        return $this->container['activity_id'];
    }

    /**
     * Sets activity_id
     *
     * @param string $activity_id Activity ID
     *
     * @return $this
     */
    public function setActivityId($activity_id)
    {
        $this->container['activity_id'] = $activity_id;

        return $this;
    }

    /**
     * Gets term_number
     *
     * @return int
     */
    public function getTermNumber()
    {
        return $this->container['term_number'];
    }

    /**
     * Sets term_number
     *
     * @param int $term_number Term Number
     *
     * @return $this
     */
    public function setTermNumber($term_number)
    {
        $this->container['term_number'] = $term_number;

        return $this;
    }

    /**
     * Gets activity_sequence
     *
     * @return int
     */
    public function getActivitySequence()
    {
        return $this->container['activity_sequence'];
    }

    /**
     * Sets activity_sequence
     *
     * @param int $activity_sequence Activity Sequence
     *
     * @return $this
     */
    public function setActivitySequence($activity_sequence)
    {
        $this->container['activity_sequence'] = $activity_sequence;

        return $this;
    }

    /**
     * Gets item_number
     *
     * @return string
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     *
     * @param string $item_number Item Number
     *
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets customer_number
     *
     * @return string
     */
    public function getCustomerNumber()
    {
        return $this->container['customer_number'];
    }

    /**
     * Sets customer_number
     *
     * @param string $customer_number Customer Number
     *
     * @return $this
     */
    public function setCustomerNumber($customer_number)
    {
        $this->container['customer_number'] = $customer_number;

        return $this;
    }

    /**
     * Gets address_code
     *
     * @return string
     */
    public function getAddressCode()
    {
        return $this->container['address_code'];
    }

    /**
     * Sets address_code
     *
     * @param string $address_code Address Code
     *
     * @return $this
     */
    public function setAddressCode($address_code)
    {
        $this->container['address_code'] = $address_code;

        return $this;
    }

    /**
     * Gets activity_status
     *
     * @return string
     */
    public function getActivityStatus()
    {
        return $this->container['activity_status'];
    }

    /**
     * Sets activity_status
     *
     * @param string $activity_status Status
     *
     * @return $this
     */
    public function setActivityStatus($activity_status)
    {
        $this->container['activity_status'] = $activity_status;

        return $this;
    }

    /**
     * Gets status_description
     *
     * @return string
     */
    public function getStatusDescription()
    {
        return $this->container['status_description'];
    }

    /**
     * Sets status_description
     *
     * @param string $status_description Status Description
     *
     * @return $this
     */
    public function setStatusDescription($status_description)
    {
        $this->container['status_description'] = $status_description;

        return $this;
    }

    /**
     * Gets sub_reference
     *
     * @return string
     */
    public function getSubReference()
    {
        return $this->container['sub_reference'];
    }

    /**
     * Sets sub_reference
     *
     * @param string $sub_reference Sub. Reference
     *
     * @return $this
     */
    public function setSubReference($sub_reference)
    {
        $this->container['sub_reference'] = $sub_reference;

        return $this;
    }

    /**
     * Gets agreement_id
     *
     * @return string
     */
    public function getAgreementId()
    {
        return $this->container['agreement_id'];
    }

    /**
     * Sets agreement_id
     *
     * @param string $agreement_id Agreement ID
     *
     * @return $this
     */
    public function setAgreementId($agreement_id)
    {
        $this->container['agreement_id'] = $agreement_id;

        return $this;
    }

    /**
     * Gets customer_po_number
     *
     * @return string
     */
    public function getCustomerPoNumber()
    {
        return $this->container['customer_po_number'];
    }

    /**
     * Sets customer_po_number
     *
     * @param string $customer_po_number Customer PO #
     *
     * @return $this
     */
    public function setCustomerPoNumber($customer_po_number)
    {
        $this->container['customer_po_number'] = $customer_po_number;

        return $this;
    }

    /**
     * Gets owning_organization
     *
     * @return string
     */
    public function getOwningOrganization()
    {
        return $this->container['owning_organization'];
    }

    /**
     * Sets owning_organization
     *
     * @param string $owning_organization Owning Organization
     *
     * @return $this
     */
    public function setOwningOrganization($owning_organization)
    {
        $this->container['owning_organization'] = $owning_organization;

        return $this;
    }

    /**
     * Gets original_order_number
     *
     * @return string
     */
    public function getOriginalOrderNumber()
    {
        return $this->container['original_order_number'];
    }

    /**
     * Sets original_order_number
     *
     * @param string $original_order_number Original Order
     *
     * @return $this
     */
    public function setOriginalOrderNumber($original_order_number)
    {
        $this->container['original_order_number'] = $original_order_number;

        return $this;
    }

    /**
     * Gets promotion_code
     *
     * @return string
     */
    public function getPromotionCode()
    {
        return $this->container['promotion_code'];
    }

    /**
     * Sets promotion_code
     *
     * @param string $promotion_code Promotion Code
     *
     * @return $this
     */
    public function setPromotionCode($promotion_code)
    {
        $this->container['promotion_code'] = $promotion_code;

        return $this;
    }

    /**
     * Gets promotion_choice
     *
     * @return string
     */
    public function getPromotionChoice()
    {
        return $this->container['promotion_choice'];
    }

    /**
     * Sets promotion_choice
     *
     * @param string $promotion_choice Promotion Choice
     *
     * @return $this
     */
    public function setPromotionChoice($promotion_choice)
    {
        $this->container['promotion_choice'] = $promotion_choice;

        return $this;
    }

    /**
     * Gets billing_status
     *
     * @return string
     */
    public function getBillingStatus()
    {
        return $this->container['billing_status'];
    }

    /**
     * Sets billing_status
     *
     * @param string $billing_status Billing Status
     *
     * @return $this
     */
    public function setBillingStatus($billing_status)
    {
        $this->container['billing_status'] = $billing_status;

        return $this;
    }

    /**
     * Gets billing_status_description
     *
     * @return string
     */
    public function getBillingStatusDescription()
    {
        return $this->container['billing_status_description'];
    }

    /**
     * Sets billing_status_description
     *
     * @param string $billing_status_description A formattted billing status description, usually description followed by code in parenthesis
     *
     * @return $this
     */
    public function setBillingStatusDescription($billing_status_description)
    {
        $this->container['billing_status_description'] = $billing_status_description;

        return $this;
    }

    /**
     * Gets final_expire_date
     *
     * @return \DateTime
     */
    public function getFinalExpireDate()
    {
        return $this->container['final_expire_date'];
    }

    /**
     * Sets final_expire_date
     *
     * @param \DateTime $final_expire_date Final Expire
     *
     * @return $this
     */
    public function setFinalExpireDate($final_expire_date)
    {
        $this->container['final_expire_date'] = $final_expire_date;

        return $this;
    }

    /**
     * Gets item_description
     *
     * @return string
     */
    public function getItemDescription()
    {
        return $this->container['item_description'];
    }

    /**
     * Sets item_description
     *
     * @param string $item_description Item Description
     *
     * @return $this
     */
    public function setItemDescription($item_description)
    {
        $this->container['item_description'] = $item_description;

        return $this;
    }

    /**
     * Gets control_group_date
     *
     * @return \DateTime
     */
    public function getControlGroupDate()
    {
        return $this->container['control_group_date'];
    }

    /**
     * Sets control_group_date
     *
     * @param \DateTime $control_group_date Original Control Group Date
     *
     * @return $this
     */
    public function setControlGroupDate($control_group_date)
    {
        $this->container['control_group_date'] = $control_group_date;

        return $this;
    }

    /**
     * Gets control_group_id
     *
     * @return string
     */
    public function getControlGroupId()
    {
        return $this->container['control_group_id'];
    }

    /**
     * Sets control_group_id
     *
     * @param string $control_group_id Original Control Group ID
     *
     * @return $this
     */
    public function setControlGroupId($control_group_id)
    {
        $this->container['control_group_id'] = $control_group_id;

        return $this;
    }

    /**
     * Gets membership_organization
     *
     * @return string
     */
    public function getMembershipOrganization()
    {
        return $this->container['membership_organization'];
    }

    /**
     * Sets membership_organization
     *
     * @param string $membership_organization Membership Organization
     *
     * @return $this
     */
    public function setMembershipOrganization($membership_organization)
    {
        $this->container['membership_organization'] = $membership_organization;

        return $this;
    }

    /**
     * Gets membership_category
     *
     * @return string
     */
    public function getMembershipCategory()
    {
        return $this->container['membership_category'];
    }

    /**
     * Sets membership_category
     *
     * @param string $membership_category Membership Category
     *
     * @return $this
     */
    public function setMembershipCategory($membership_category)
    {
        $this->container['membership_category'] = $membership_category;

        return $this;
    }

    /**
     * Gets circulation_status
     *
     * @return string
     */
    public function getCirculationStatus()
    {
        return $this->container['circulation_status'];
    }

    /**
     * Sets circulation_status
     *
     * @param string $circulation_status Circulation Status
     *
     * @return $this
     */
    public function setCirculationStatus($circulation_status)
    {
        $this->container['circulation_status'] = $circulation_status;

        return $this;
    }

    /**
     * Gets circulation_status_description
     *
     * @return string
     */
    public function getCirculationStatusDescription()
    {
        return $this->container['circulation_status_description'];
    }

    /**
     * Sets circulation_status_description
     *
     * @param string $circulation_status_description circulation_status_description
     *
     * @return $this
     */
    public function setCirculationStatusDescription($circulation_status_description)
    {
        $this->container['circulation_status_description'] = $circulation_status_description;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return double
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param double $rate Rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets remaining_liability
     *
     * @return double
     */
    public function getRemainingLiability()
    {
        return $this->container['remaining_liability'];
    }

    /**
     * Sets remaining_liability
     *
     * @param double $remaining_liability Remaining Liability
     *
     * @return $this
     */
    public function setRemainingLiability($remaining_liability)
    {
        $this->container['remaining_liability'] = $remaining_liability;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset): mixed
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


