<?php
/**
 * PromotionCreative
 *
 * PHP version 5
 *
 * @category Class
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Advantage Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Advantage Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Advantage\Client\Model;

use \ArrayAccess;
use \Advantage\Client\ObjectSerializer;

/**
 * PromotionCreative Class Doc Comment
 *
 * @category Class
 * @description Creatives store legal or layout information linked to a promotion. Creatives are versioned to   keep historical data available.  When a creative is created it is assigned version 1 and each time a   version is added its version number is incremented.
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PromotionCreative implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PromotionCreative';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'creative_key' => '\Advantage\Client\Model\PromotionCreativeKey',
        'name' => 'string',
        'has_headline_changed' => 'bool',
        'has_lead_changed' => 'bool',
        'has_offer_changed' => 'bool',
        'has_other_changed' => 'bool',
        'lead_change_text' => 'string',
        'headline_change_text' => 'string',
        'offer_change_text' => 'string',
        'other_change_text' => 'string',
        'item_number' => 'string',
        'owning_organization_code' => 'string',
        'currency_code' => 'string',
        'previous_creative_code' => 'string',
        'price_point' => 'double',
        'headline' => 'string',
        'narrative' => 'string',
        'copywriters' => '\Advantage\Client\Model\PromotionCreativeCopywriter[]',
        'documents' => '\Advantage\Client\Model\PromotionCreativeDocument[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'creative_key' => null,
        'name' => null,
        'has_headline_changed' => null,
        'has_lead_changed' => null,
        'has_offer_changed' => null,
        'has_other_changed' => null,
        'lead_change_text' => null,
        'headline_change_text' => null,
        'offer_change_text' => null,
        'other_change_text' => null,
        'item_number' => null,
        'owning_organization_code' => null,
        'currency_code' => null,
        'previous_creative_code' => null,
        'price_point' => 'double',
        'headline' => null,
        'narrative' => null,
        'copywriters' => null,
        'documents' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'creative_key' => 'CreativeKey',
        'name' => 'Name',
        'has_headline_changed' => 'HasHeadlineChanged',
        'has_lead_changed' => 'HasLeadChanged',
        'has_offer_changed' => 'HasOfferChanged',
        'has_other_changed' => 'HasOtherChanged',
        'lead_change_text' => 'LeadChangeText',
        'headline_change_text' => 'HeadlineChangeText',
        'offer_change_text' => 'OfferChangeText',
        'other_change_text' => 'OtherChangeText',
        'item_number' => 'ItemNumber',
        'owning_organization_code' => 'OwningOrganizationCode',
        'currency_code' => 'CurrencyCode',
        'previous_creative_code' => 'PreviousCreativeCode',
        'price_point' => 'PricePoint',
        'headline' => 'Headline',
        'narrative' => 'Narrative',
        'copywriters' => 'Copywriters',
        'documents' => 'Documents'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'creative_key' => 'setCreativeKey',
        'name' => 'setName',
        'has_headline_changed' => 'setHasHeadlineChanged',
        'has_lead_changed' => 'setHasLeadChanged',
        'has_offer_changed' => 'setHasOfferChanged',
        'has_other_changed' => 'setHasOtherChanged',
        'lead_change_text' => 'setLeadChangeText',
        'headline_change_text' => 'setHeadlineChangeText',
        'offer_change_text' => 'setOfferChangeText',
        'other_change_text' => 'setOtherChangeText',
        'item_number' => 'setItemNumber',
        'owning_organization_code' => 'setOwningOrganizationCode',
        'currency_code' => 'setCurrencyCode',
        'previous_creative_code' => 'setPreviousCreativeCode',
        'price_point' => 'setPricePoint',
        'headline' => 'setHeadline',
        'narrative' => 'setNarrative',
        'copywriters' => 'setCopywriters',
        'documents' => 'setDocuments'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'creative_key' => 'getCreativeKey',
        'name' => 'getName',
        'has_headline_changed' => 'getHasHeadlineChanged',
        'has_lead_changed' => 'getHasLeadChanged',
        'has_offer_changed' => 'getHasOfferChanged',
        'has_other_changed' => 'getHasOtherChanged',
        'lead_change_text' => 'getLeadChangeText',
        'headline_change_text' => 'getHeadlineChangeText',
        'offer_change_text' => 'getOfferChangeText',
        'other_change_text' => 'getOtherChangeText',
        'item_number' => 'getItemNumber',
        'owning_organization_code' => 'getOwningOrganizationCode',
        'currency_code' => 'getCurrencyCode',
        'previous_creative_code' => 'getPreviousCreativeCode',
        'price_point' => 'getPricePoint',
        'headline' => 'getHeadline',
        'narrative' => 'getNarrative',
        'copywriters' => 'getCopywriters',
        'documents' => 'getDocuments'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['creative_key'] = isset($data['creative_key']) ? $data['creative_key'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['has_headline_changed'] = isset($data['has_headline_changed']) ? $data['has_headline_changed'] : null;
        $this->container['has_lead_changed'] = isset($data['has_lead_changed']) ? $data['has_lead_changed'] : null;
        $this->container['has_offer_changed'] = isset($data['has_offer_changed']) ? $data['has_offer_changed'] : null;
        $this->container['has_other_changed'] = isset($data['has_other_changed']) ? $data['has_other_changed'] : null;
        $this->container['lead_change_text'] = isset($data['lead_change_text']) ? $data['lead_change_text'] : null;
        $this->container['headline_change_text'] = isset($data['headline_change_text']) ? $data['headline_change_text'] : null;
        $this->container['offer_change_text'] = isset($data['offer_change_text']) ? $data['offer_change_text'] : null;
        $this->container['other_change_text'] = isset($data['other_change_text']) ? $data['other_change_text'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['owning_organization_code'] = isset($data['owning_organization_code']) ? $data['owning_organization_code'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['previous_creative_code'] = isset($data['previous_creative_code']) ? $data['previous_creative_code'] : null;
        $this->container['price_point'] = isset($data['price_point']) ? $data['price_point'] : null;
        $this->container['headline'] = isset($data['headline']) ? $data['headline'] : null;
        $this->container['narrative'] = isset($data['narrative']) ? $data['narrative'] : null;
        $this->container['copywriters'] = isset($data['copywriters']) ? $data['copywriters'] : null;
        $this->container['documents'] = isset($data['documents']) ? $data['documents'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets creative_key
     *
     * @return \Advantage\Client\Model\PromotionCreativeKey
     */
    public function getCreativeKey()
    {
        return $this->container['creative_key'];
    }

    /**
     * Sets creative_key
     *
     * @param \Advantage\Client\Model\PromotionCreativeKey $creative_key Information to uniquely identify the promotion creative
     *
     * @return $this
     */
    public function setCreativeKey($creative_key)
    {
        $this->container['creative_key'] = $creative_key;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Text describing the creative
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets has_headline_changed
     *
     * @return bool
     */
    public function getHasHeadlineChanged()
    {
        return $this->container['has_headline_changed'];
    }

    /**
     * Sets has_headline_changed
     *
     * @param bool $has_headline_changed True if the headline text has changed
     *
     * @return $this
     */
    public function setHasHeadlineChanged($has_headline_changed)
    {
        $this->container['has_headline_changed'] = $has_headline_changed;

        return $this;
    }

    /**
     * Gets has_lead_changed
     *
     * @return bool
     */
    public function getHasLeadChanged()
    {
        return $this->container['has_lead_changed'];
    }

    /**
     * Sets has_lead_changed
     *
     * @param bool $has_lead_changed True if the lead text has changed
     *
     * @return $this
     */
    public function setHasLeadChanged($has_lead_changed)
    {
        $this->container['has_lead_changed'] = $has_lead_changed;

        return $this;
    }

    /**
     * Gets has_offer_changed
     *
     * @return bool
     */
    public function getHasOfferChanged()
    {
        return $this->container['has_offer_changed'];
    }

    /**
     * Sets has_offer_changed
     *
     * @param bool $has_offer_changed True if the offer text has changed
     *
     * @return $this
     */
    public function setHasOfferChanged($has_offer_changed)
    {
        $this->container['has_offer_changed'] = $has_offer_changed;

        return $this;
    }

    /**
     * Gets has_other_changed
     *
     * @return bool
     */
    public function getHasOtherChanged()
    {
        return $this->container['has_other_changed'];
    }

    /**
     * Sets has_other_changed
     *
     * @param bool $has_other_changed True if the other text has changed
     *
     * @return $this
     */
    public function setHasOtherChanged($has_other_changed)
    {
        $this->container['has_other_changed'] = $has_other_changed;

        return $this;
    }

    /**
     * Gets lead_change_text
     *
     * @return string
     */
    public function getLeadChangeText()
    {
        return $this->container['lead_change_text'];
    }

    /**
     * Sets lead_change_text
     *
     * @param string $lead_change_text Lead change text
     *
     * @return $this
     */
    public function setLeadChangeText($lead_change_text)
    {
        $this->container['lead_change_text'] = $lead_change_text;

        return $this;
    }

    /**
     * Gets headline_change_text
     *
     * @return string
     */
    public function getHeadlineChangeText()
    {
        return $this->container['headline_change_text'];
    }

    /**
     * Sets headline_change_text
     *
     * @param string $headline_change_text Headline change text
     *
     * @return $this
     */
    public function setHeadlineChangeText($headline_change_text)
    {
        $this->container['headline_change_text'] = $headline_change_text;

        return $this;
    }

    /**
     * Gets offer_change_text
     *
     * @return string
     */
    public function getOfferChangeText()
    {
        return $this->container['offer_change_text'];
    }

    /**
     * Sets offer_change_text
     *
     * @param string $offer_change_text Offer change text
     *
     * @return $this
     */
    public function setOfferChangeText($offer_change_text)
    {
        $this->container['offer_change_text'] = $offer_change_text;

        return $this;
    }

    /**
     * Gets other_change_text
     *
     * @return string
     */
    public function getOtherChangeText()
    {
        return $this->container['other_change_text'];
    }

    /**
     * Sets other_change_text
     *
     * @param string $other_change_text Other change text
     *
     * @return $this
     */
    public function setOtherChangeText($other_change_text)
    {
        $this->container['other_change_text'] = $other_change_text;

        return $this;
    }

    /**
     * Gets item_number
     *
     * @return string
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     *
     * @param string $item_number Item number identifying the product associated with the creative
     *
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets owning_organization_code
     *
     * @return string
     */
    public function getOwningOrganizationCode()
    {
        return $this->container['owning_organization_code'];
    }

    /**
     * Sets owning_organization_code
     *
     * @param string $owning_organization_code The code identifying the organization that owns the creative
     *
     * @return $this
     */
    public function setOwningOrganizationCode($owning_organization_code)
    {
        $this->container['owning_organization_code'] = $owning_organization_code;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string $currency_code The code identifying the creative's currency
     *
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets previous_creative_code
     *
     * @return string
     */
    public function getPreviousCreativeCode()
    {
        return $this->container['previous_creative_code'];
    }

    /**
     * Sets previous_creative_code
     *
     * @param string $previous_creative_code The code identifying an associated promotion creative
     *
     * @return $this
     */
    public function setPreviousCreativeCode($previous_creative_code)
    {
        $this->container['previous_creative_code'] = $previous_creative_code;

        return $this;
    }

    /**
     * Gets price_point
     *
     * @return double
     */
    public function getPricePoint()
    {
        return $this->container['price_point'];
    }

    /**
     * Sets price_point
     *
     * @param double $price_point Price point
     *
     * @return $this
     */
    public function setPricePoint($price_point)
    {
        $this->container['price_point'] = $price_point;

        return $this;
    }

    /**
     * Gets headline
     *
     * @return string
     */
    public function getHeadline()
    {
        return $this->container['headline'];
    }

    /**
     * Sets headline
     *
     * @param string $headline The creative's headline
     *
     * @return $this
     */
    public function setHeadline($headline)
    {
        $this->container['headline'] = $headline;

        return $this;
    }

    /**
     * Gets narrative
     *
     * @return string
     */
    public function getNarrative()
    {
        return $this->container['narrative'];
    }

    /**
     * Sets narrative
     *
     * @param string $narrative The creative's narrative
     *
     * @return $this
     */
    public function setNarrative($narrative)
    {
        $this->container['narrative'] = $narrative;

        return $this;
    }

    /**
     * Gets copywriters
     *
     * @return \Advantage\Client\Model\PromotionCreativeCopywriter[]
     */
    public function getCopywriters()
    {
        return $this->container['copywriters'];
    }

    /**
     * Sets copywriters
     *
     * @param \Advantage\Client\Model\PromotionCreativeCopywriter[] $copywriters Copywriters associated with this creative
     *
     * @return $this
     */
    public function setCopywriters($copywriters)
    {
        $this->container['copywriters'] = $copywriters;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \Advantage\Client\Model\PromotionCreativeDocument[]
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \Advantage\Client\Model\PromotionCreativeDocument[] $documents Documents associated with this creative
     *
     * @return $this
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


