<?php
/**
 * AccessPromotionItemDefaultsIn
 *
 * PHP version 5
 *
 * @category Class
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Advantage Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Advantage Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Advantage\Client\Model;

use \ArrayAccess;
use \Advantage\Client\ObjectSerializer;

/**
 * AccessPromotionItemDefaultsIn Class Doc Comment
 *
 * @category Class
 * @description Information for a promotion choice item for an agreement.
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AccessPromotionItemDefaultsIn implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AccessPromotionItemDefaultsIn';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'earning_period_code' => 'string',
        'is_usage_based' => 'bool',
        'is_trial_term' => 'bool',
        'complimentary_reason_code' => 'string',
        'free_days' => 'int',
        'extension_days' => 'int',
        'is_excluded_from_auto_suspend' => 'bool',
        'quantity_ordered' => 'int',
        'pricing_method' => 'string',
        'renewal_policy_code' => 'string',
        'access_period_code' => 'string',
        'maximum_participants' => 'int',
        'credit_policy_code' => 'string',
        'auto_renewal_chain_id' => 'string',
        'auto_renewal_promotion_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'earning_period_code' => null,
        'is_usage_based' => null,
        'is_trial_term' => null,
        'complimentary_reason_code' => null,
        'free_days' => 'int32',
        'extension_days' => 'int32',
        'is_excluded_from_auto_suspend' => null,
        'quantity_ordered' => 'int32',
        'pricing_method' => null,
        'renewal_policy_code' => null,
        'access_period_code' => null,
        'maximum_participants' => 'int32',
        'credit_policy_code' => null,
        'auto_renewal_chain_id' => null,
        'auto_renewal_promotion_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'earning_period_code' => 'EarningPeriodCode',
        'is_usage_based' => 'IsUsageBased',
        'is_trial_term' => 'IsTrialTerm',
        'complimentary_reason_code' => 'ComplimentaryReasonCode',
        'free_days' => 'FreeDays',
        'extension_days' => 'ExtensionDays',
        'is_excluded_from_auto_suspend' => 'IsExcludedFromAutoSuspend',
        'quantity_ordered' => 'QuantityOrdered',
        'pricing_method' => 'PricingMethod',
        'renewal_policy_code' => 'RenewalPolicyCode',
        'access_period_code' => 'AccessPeriodCode',
        'maximum_participants' => 'MaximumParticipants',
        'credit_policy_code' => 'CreditPolicyCode',
        'auto_renewal_chain_id' => 'AutoRenewalChainId',
        'auto_renewal_promotion_code' => 'AutoRenewalPromotionCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'earning_period_code' => 'setEarningPeriodCode',
        'is_usage_based' => 'setIsUsageBased',
        'is_trial_term' => 'setIsTrialTerm',
        'complimentary_reason_code' => 'setComplimentaryReasonCode',
        'free_days' => 'setFreeDays',
        'extension_days' => 'setExtensionDays',
        'is_excluded_from_auto_suspend' => 'setIsExcludedFromAutoSuspend',
        'quantity_ordered' => 'setQuantityOrdered',
        'pricing_method' => 'setPricingMethod',
        'renewal_policy_code' => 'setRenewalPolicyCode',
        'access_period_code' => 'setAccessPeriodCode',
        'maximum_participants' => 'setMaximumParticipants',
        'credit_policy_code' => 'setCreditPolicyCode',
        'auto_renewal_chain_id' => 'setAutoRenewalChainId',
        'auto_renewal_promotion_code' => 'setAutoRenewalPromotionCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'earning_period_code' => 'getEarningPeriodCode',
        'is_usage_based' => 'getIsUsageBased',
        'is_trial_term' => 'getIsTrialTerm',
        'complimentary_reason_code' => 'getComplimentaryReasonCode',
        'free_days' => 'getFreeDays',
        'extension_days' => 'getExtensionDays',
        'is_excluded_from_auto_suspend' => 'getIsExcludedFromAutoSuspend',
        'quantity_ordered' => 'getQuantityOrdered',
        'pricing_method' => 'getPricingMethod',
        'renewal_policy_code' => 'getRenewalPolicyCode',
        'access_period_code' => 'getAccessPeriodCode',
        'maximum_participants' => 'getMaximumParticipants',
        'credit_policy_code' => 'getCreditPolicyCode',
        'auto_renewal_chain_id' => 'getAutoRenewalChainId',
        'auto_renewal_promotion_code' => 'getAutoRenewalPromotionCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const PRICING_METHOD_AGREEMENT_BASED = 'AgreementBased';
    const PRICING_METHOD_PARTICIPANT_BASED = 'ParticipantBased';
    const PRICING_METHOD_QUANTITY_BASED = 'QuantityBased';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getPricingMethodAllowableValues()
    {
        return [
            self::PRICING_METHOD_AGREEMENT_BASED,
            self::PRICING_METHOD_PARTICIPANT_BASED,
            self::PRICING_METHOD_QUANTITY_BASED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['earning_period_code'] = isset($data['earning_period_code']) ? $data['earning_period_code'] : null;
        $this->container['is_usage_based'] = isset($data['is_usage_based']) ? $data['is_usage_based'] : null;
        $this->container['is_trial_term'] = isset($data['is_trial_term']) ? $data['is_trial_term'] : null;
        $this->container['complimentary_reason_code'] = isset($data['complimentary_reason_code']) ? $data['complimentary_reason_code'] : null;
        $this->container['free_days'] = isset($data['free_days']) ? $data['free_days'] : null;
        $this->container['extension_days'] = isset($data['extension_days']) ? $data['extension_days'] : null;
        $this->container['is_excluded_from_auto_suspend'] = isset($data['is_excluded_from_auto_suspend']) ? $data['is_excluded_from_auto_suspend'] : null;
        $this->container['quantity_ordered'] = isset($data['quantity_ordered']) ? $data['quantity_ordered'] : null;
        $this->container['pricing_method'] = isset($data['pricing_method']) ? $data['pricing_method'] : null;
        $this->container['renewal_policy_code'] = isset($data['renewal_policy_code']) ? $data['renewal_policy_code'] : null;
        $this->container['access_period_code'] = isset($data['access_period_code']) ? $data['access_period_code'] : null;
        $this->container['maximum_participants'] = isset($data['maximum_participants']) ? $data['maximum_participants'] : null;
        $this->container['credit_policy_code'] = isset($data['credit_policy_code']) ? $data['credit_policy_code'] : null;
        $this->container['auto_renewal_chain_id'] = isset($data['auto_renewal_chain_id']) ? $data['auto_renewal_chain_id'] : null;
        $this->container['auto_renewal_promotion_code'] = isset($data['auto_renewal_promotion_code']) ? $data['auto_renewal_promotion_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getPricingMethodAllowableValues();
        if (!is_null($this->container['pricing_method']) && !in_array($this->container['pricing_method'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'pricing_method', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets earning_period_code
     *
     * @return string
     */
    public function getEarningPeriodCode()
    {
        return $this->container['earning_period_code'];
    }

    /**
     * Sets earning_period_code
     *
     * @param string $earning_period_code Timespan over which liability is earned. This is independent of the access period.
     *
     * @return $this
     */
    public function setEarningPeriodCode($earning_period_code)
    {
        $this->container['earning_period_code'] = $earning_period_code;

        return $this;
    }

    /**
     * Gets is_usage_based
     *
     * @return bool
     */
    public function getIsUsageBased()
    {
        return $this->container['is_usage_based'];
    }

    /**
     * Sets is_usage_based
     *
     * @param bool $is_usage_based Does the agreement limit the participant's access based on how many times the participant accesses the content?
     *
     * @return $this
     */
    public function setIsUsageBased($is_usage_based)
    {
        $this->container['is_usage_based'] = $is_usage_based;

        return $this;
    }

    /**
     * Gets is_trial_term
     *
     * @return bool
     */
    public function getIsTrialTerm()
    {
        return $this->container['is_trial_term'];
    }

    /**
     * Sets is_trial_term
     *
     * @param bool $is_trial_term Does the promotion include a trial term (term 0)?
     *
     * @return $this
     */
    public function setIsTrialTerm($is_trial_term)
    {
        $this->container['is_trial_term'] = $is_trial_term;

        return $this;
    }

    /**
     * Gets complimentary_reason_code
     *
     * @return string
     */
    public function getComplimentaryReasonCode()
    {
        return $this->container['complimentary_reason_code'];
    }

    /**
     * Sets complimentary_reason_code
     *
     * @param string $complimentary_reason_code Explains why an agreement is complimentary.
     *
     * @return $this
     */
    public function setComplimentaryReasonCode($complimentary_reason_code)
    {
        $this->container['complimentary_reason_code'] = $complimentary_reason_code;

        return $this;
    }

    /**
     * Gets free_days
     *
     * @return int
     */
    public function getFreeDays()
    {
        return $this->container['free_days'];
    }

    /**
     * Sets free_days
     *
     * @param int $free_days The number of days of free access an agreement gets before it starts.
     *
     * @return $this
     */
    public function setFreeDays($free_days)
    {
        $this->container['free_days'] = $free_days;

        return $this;
    }

    /**
     * Gets extension_days
     *
     * @return int
     */
    public function getExtensionDays()
    {
        return $this->container['extension_days'];
    }

    /**
     * Sets extension_days
     *
     * @param int $extension_days The number of days of free access an agreement gets after it expires.
     *
     * @return $this
     */
    public function setExtensionDays($extension_days)
    {
        $this->container['extension_days'] = $extension_days;

        return $this;
    }

    /**
     * Gets is_excluded_from_auto_suspend
     *
     * @return bool
     */
    public function getIsExcludedFromAutoSuspend()
    {
        return $this->container['is_excluded_from_auto_suspend'];
    }

    /**
     * Sets is_excluded_from_auto_suspend
     *
     * @param bool $is_excluded_from_auto_suspend Is this promotion excluded from auto-suspend?
     *
     * @return $this
     */
    public function setIsExcludedFromAutoSuspend($is_excluded_from_auto_suspend)
    {
        $this->container['is_excluded_from_auto_suspend'] = $is_excluded_from_auto_suspend;

        return $this;
    }

    /**
     * Gets quantity_ordered
     *
     * @return int
     */
    public function getQuantityOrdered()
    {
        return $this->container['quantity_ordered'];
    }

    /**
     * Sets quantity_ordered
     *
     * @param int $quantity_ordered The number of units the customer ordered.
     *
     * @return $this
     */
    public function setQuantityOrdered($quantity_ordered)
    {
        $this->container['quantity_ordered'] = $quantity_ordered;

        return $this;
    }

    /**
     * Gets pricing_method
     *
     * @return string
     */
    public function getPricingMethod()
    {
        return $this->container['pricing_method'];
    }

    /**
     * Sets pricing_method
     *
     * @param string $pricing_method An agreement specific pricing method.
     *
     * @return $this
     */
    public function setPricingMethod($pricing_method)
    {
        $allowedValues = $this->getPricingMethodAllowableValues();
        if (!is_null($pricing_method) && !in_array($pricing_method, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'pricing_method', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['pricing_method'] = $pricing_method;

        return $this;
    }

    /**
     * Gets renewal_policy_code
     *
     * @return string
     */
    public function getRenewalPolicyCode()
    {
        return $this->container['renewal_policy_code'];
    }

    /**
     * Sets renewal_policy_code
     *
     * @param string $renewal_policy_code Renewal status of the agreement. Specifies whether a renewal notice should be sent to the subscriber.
     *
     * @return $this
     */
    public function setRenewalPolicyCode($renewal_policy_code)
    {
        $this->container['renewal_policy_code'] = $renewal_policy_code;

        return $this;
    }

    /**
     * Gets access_period_code
     *
     * @return string
     */
    public function getAccessPeriodCode()
    {
        return $this->container['access_period_code'];
    }

    /**
     * Sets access_period_code
     *
     * @param string $access_period_code Length of the agreement.
     *
     * @return $this
     */
    public function setAccessPeriodCode($access_period_code)
    {
        $this->container['access_period_code'] = $access_period_code;

        return $this;
    }

    /**
     * Gets maximum_participants
     *
     * @return int
     */
    public function getMaximumParticipants()
    {
        return $this->container['maximum_participants'];
    }

    /**
     * Sets maximum_participants
     *
     * @param int $maximum_participants The maximum number of participants that can be linked to an agreement.
     *
     * @return $this
     */
    public function setMaximumParticipants($maximum_participants)
    {
        $this->container['maximum_participants'] = $maximum_participants;

        return $this;
    }

    /**
     * Gets credit_policy_code
     *
     * @return string
     */
    public function getCreditPolicyCode()
    {
        return $this->container['credit_policy_code'];
    }

    /**
     * Sets credit_policy_code
     *
     * @param string $credit_policy_code Defines how credits are created when a sub is canceled.
     *
     * @return $this
     */
    public function setCreditPolicyCode($credit_policy_code)
    {
        $this->container['credit_policy_code'] = $credit_policy_code;

        return $this;
    }

    /**
     * Gets auto_renewal_chain_id
     *
     * @return string
     */
    public function getAutoRenewalChainId()
    {
        return $this->container['auto_renewal_chain_id'];
    }

    /**
     * Sets auto_renewal_chain_id
     *
     * @param string $auto_renewal_chain_id The auto-renewal chain ID.
     *
     * @return $this
     */
    public function setAutoRenewalChainId($auto_renewal_chain_id)
    {
        $this->container['auto_renewal_chain_id'] = $auto_renewal_chain_id;

        return $this;
    }

    /**
     * Gets auto_renewal_promotion_code
     *
     * @return string
     */
    public function getAutoRenewalPromotionCode()
    {
        return $this->container['auto_renewal_promotion_code'];
    }

    /**
     * Sets auto_renewal_promotion_code
     *
     * @param string $auto_renewal_promotion_code The auto-renewal promotion code.
     *
     * @return $this
     */
    public function setAutoRenewalPromotionCode($auto_renewal_promotion_code)
    {
        $this->container['auto_renewal_promotion_code'] = $auto_renewal_promotion_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


