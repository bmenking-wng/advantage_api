<?php
/**
 * ControlGroupDefaults
 *
 * PHP version 5
 *
 * @category Class
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Advantage Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Advantage Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Advantage\Client\Model;

use \ArrayAccess;
use \Advantage\Client\ObjectSerializer;

/**
 * ControlGroupDefaults Class Doc Comment
 *
 * @category Class
 * @description Defaults for Control Group Model
 * @package  Advantage\Client
 * @author   Advantage Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ControlGroupDefaults implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ControlGroupDefaults';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'promotion_code' => 'string',
        'promotion_choice_code' => 'string',
        'docket_number' => 'string',
        'payment_currency_code' => 'string',
        'currency_code' => 'string',
        'billing_organization_code' => 'string',
        'installment_billing_code' => 'string',
        'questionnaire_code' => 'string',
        'auto_create_authentication' => 'bool',
        'item_number' => 'string',
        'price_code' => 'string',
        'different_ship_to' => 'bool',
        'reserve_credit_rule_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'promotion_code' => null,
        'promotion_choice_code' => null,
        'docket_number' => null,
        'payment_currency_code' => null,
        'currency_code' => null,
        'billing_organization_code' => null,
        'installment_billing_code' => null,
        'questionnaire_code' => null,
        'auto_create_authentication' => null,
        'item_number' => null,
        'price_code' => null,
        'different_ship_to' => null,
        'reserve_credit_rule_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'promotion_code' => 'PromotionCode',
        'promotion_choice_code' => 'PromotionChoiceCode',
        'docket_number' => 'DocketNumber',
        'payment_currency_code' => 'PaymentCurrencyCode',
        'currency_code' => 'CurrencyCode',
        'billing_organization_code' => 'BillingOrganizationCode',
        'installment_billing_code' => 'InstallmentBillingCode',
        'questionnaire_code' => 'QuestionnaireCode',
        'auto_create_authentication' => 'AutoCreateAuthentication',
        'item_number' => 'ItemNumber',
        'price_code' => 'PriceCode',
        'different_ship_to' => 'DifferentShipTo',
        'reserve_credit_rule_code' => 'ReserveCreditRuleCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'promotion_code' => 'setPromotionCode',
        'promotion_choice_code' => 'setPromotionChoiceCode',
        'docket_number' => 'setDocketNumber',
        'payment_currency_code' => 'setPaymentCurrencyCode',
        'currency_code' => 'setCurrencyCode',
        'billing_organization_code' => 'setBillingOrganizationCode',
        'installment_billing_code' => 'setInstallmentBillingCode',
        'questionnaire_code' => 'setQuestionnaireCode',
        'auto_create_authentication' => 'setAutoCreateAuthentication',
        'item_number' => 'setItemNumber',
        'price_code' => 'setPriceCode',
        'different_ship_to' => 'setDifferentShipTo',
        'reserve_credit_rule_code' => 'setReserveCreditRuleCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'promotion_code' => 'getPromotionCode',
        'promotion_choice_code' => 'getPromotionChoiceCode',
        'docket_number' => 'getDocketNumber',
        'payment_currency_code' => 'getPaymentCurrencyCode',
        'currency_code' => 'getCurrencyCode',
        'billing_organization_code' => 'getBillingOrganizationCode',
        'installment_billing_code' => 'getInstallmentBillingCode',
        'questionnaire_code' => 'getQuestionnaireCode',
        'auto_create_authentication' => 'getAutoCreateAuthentication',
        'item_number' => 'getItemNumber',
        'price_code' => 'getPriceCode',
        'different_ship_to' => 'getDifferentShipTo',
        'reserve_credit_rule_code' => 'getReserveCreditRuleCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['promotion_code'] = isset($data['promotion_code']) ? $data['promotion_code'] : null;
        $this->container['promotion_choice_code'] = isset($data['promotion_choice_code']) ? $data['promotion_choice_code'] : null;
        $this->container['docket_number'] = isset($data['docket_number']) ? $data['docket_number'] : null;
        $this->container['payment_currency_code'] = isset($data['payment_currency_code']) ? $data['payment_currency_code'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['billing_organization_code'] = isset($data['billing_organization_code']) ? $data['billing_organization_code'] : null;
        $this->container['installment_billing_code'] = isset($data['installment_billing_code']) ? $data['installment_billing_code'] : null;
        $this->container['questionnaire_code'] = isset($data['questionnaire_code']) ? $data['questionnaire_code'] : null;
        $this->container['auto_create_authentication'] = isset($data['auto_create_authentication']) ? $data['auto_create_authentication'] : null;
        $this->container['item_number'] = isset($data['item_number']) ? $data['item_number'] : null;
        $this->container['price_code'] = isset($data['price_code']) ? $data['price_code'] : null;
        $this->container['different_ship_to'] = isset($data['different_ship_to']) ? $data['different_ship_to'] : null;
        $this->container['reserve_credit_rule_code'] = isset($data['reserve_credit_rule_code']) ? $data['reserve_credit_rule_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets promotion_code
     *
     * @return string
     */
    public function getPromotionCode()
    {
        return $this->container['promotion_code'];
    }

    /**
     * Sets promotion_code
     *
     * @param string $promotion_code Promotion Code
     *
     * @return $this
     */
    public function setPromotionCode($promotion_code)
    {
        $this->container['promotion_code'] = $promotion_code;

        return $this;
    }

    /**
     * Gets promotion_choice_code
     *
     * @return string
     */
    public function getPromotionChoiceCode()
    {
        return $this->container['promotion_choice_code'];
    }

    /**
     * Sets promotion_choice_code
     *
     * @param string $promotion_choice_code Promotion Choice
     *
     * @return $this
     */
    public function setPromotionChoiceCode($promotion_choice_code)
    {
        $this->container['promotion_choice_code'] = $promotion_choice_code;

        return $this;
    }

    /**
     * Gets docket_number
     *
     * @return string
     */
    public function getDocketNumber()
    {
        return $this->container['docket_number'];
    }

    /**
     * Sets docket_number
     *
     * @param string $docket_number Docket Number
     *
     * @return $this
     */
    public function setDocketNumber($docket_number)
    {
        $this->container['docket_number'] = $docket_number;

        return $this;
    }

    /**
     * Gets payment_currency_code
     *
     * @return string
     */
    public function getPaymentCurrencyCode()
    {
        return $this->container['payment_currency_code'];
    }

    /**
     * Sets payment_currency_code
     *
     * @param string $payment_currency_code Payment Currency
     *
     * @return $this
     */
    public function setPaymentCurrencyCode($payment_currency_code)
    {
        $this->container['payment_currency_code'] = $payment_currency_code;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string $currency_code Restrict order currency
     *
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets billing_organization_code
     *
     * @return string
     */
    public function getBillingOrganizationCode()
    {
        return $this->container['billing_organization_code'];
    }

    /**
     * Sets billing_organization_code
     *
     * @param string $billing_organization_code Billing Organization
     *
     * @return $this
     */
    public function setBillingOrganizationCode($billing_organization_code)
    {
        $this->container['billing_organization_code'] = $billing_organization_code;

        return $this;
    }

    /**
     * Gets installment_billing_code
     *
     * @return string
     */
    public function getInstallmentBillingCode()
    {
        return $this->container['installment_billing_code'];
    }

    /**
     * Sets installment_billing_code
     *
     * @param string $installment_billing_code Installment Billing Code
     *
     * @return $this
     */
    public function setInstallmentBillingCode($installment_billing_code)
    {
        $this->container['installment_billing_code'] = $installment_billing_code;

        return $this;
    }

    /**
     * Gets questionnaire_code
     *
     * @return string
     */
    public function getQuestionnaireCode()
    {
        return $this->container['questionnaire_code'];
    }

    /**
     * Sets questionnaire_code
     *
     * @param string $questionnaire_code Questionnaire Name
     *
     * @return $this
     */
    public function setQuestionnaireCode($questionnaire_code)
    {
        $this->container['questionnaire_code'] = $questionnaire_code;

        return $this;
    }

    /**
     * Gets auto_create_authentication
     *
     * @return bool
     */
    public function getAutoCreateAuthentication()
    {
        return $this->container['auto_create_authentication'];
    }

    /**
     * Sets auto_create_authentication
     *
     * @param bool $auto_create_authentication True to auto-create customer authentication
     *
     * @return $this
     */
    public function setAutoCreateAuthentication($auto_create_authentication)
    {
        $this->container['auto_create_authentication'] = $auto_create_authentication;

        return $this;
    }

    /**
     * Gets item_number
     *
     * @return string
     */
    public function getItemNumber()
    {
        return $this->container['item_number'];
    }

    /**
     * Sets item_number
     *
     * @param string $item_number Item Number
     *
     * @return $this
     */
    public function setItemNumber($item_number)
    {
        $this->container['item_number'] = $item_number;

        return $this;
    }

    /**
     * Gets price_code
     *
     * @return string
     */
    public function getPriceCode()
    {
        return $this->container['price_code'];
    }

    /**
     * Sets price_code
     *
     * @param string $price_code Price Code
     *
     * @return $this
     */
    public function setPriceCode($price_code)
    {
        $this->container['price_code'] = $price_code;

        return $this;
    }

    /**
     * Gets different_ship_to
     *
     * @return bool
     */
    public function getDifferentShipTo()
    {
        return $this->container['different_ship_to'];
    }

    /**
     * Sets different_ship_to
     *
     * @param bool $different_ship_to Different ship-to flag
     *
     * @return $this
     */
    public function setDifferentShipTo($different_ship_to)
    {
        $this->container['different_ship_to'] = $different_ship_to;

        return $this;
    }

    /**
     * Gets reserve_credit_rule_code
     *
     * @return string
     */
    public function getReserveCreditRuleCode()
    {
        return $this->container['reserve_credit_rule_code'];
    }

    /**
     * Sets reserve_credit_rule_code
     *
     * @param string $reserve_credit_rule_code Reserve Credit Rule Code
     *
     * @return $this
     */
    public function setReserveCreditRuleCode($reserve_credit_rule_code)
    {
        $this->container['reserve_credit_rule_code'] = $reserve_credit_rule_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


