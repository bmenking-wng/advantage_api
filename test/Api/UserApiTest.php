<?php
/**
 * UserApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for userCreate
     *
     * Create a new user..
     *
     */
    public function testUserCreate()
    {
    }

    /**
     * Test case for userGet
     *
     * Get the user based on username..
     *
     */
    public function testUserGet()
    {
    }

    /**
     * Test case for userGetByAuthenticationNumber
     *
     * Get the user based on unique authentication number.
     *
     */
    public function testUserGetByAuthenticationNumber()
    {
    }

    /**
     * Test case for userGetByAuthenticationType
     *
     * Get the user based on authentication type (e.g. Google, Facebook, Shibboleth) and authentication value.
     *
     */
    public function testUserGetByAuthenticationType()
    {
    }

    /**
     * Test case for userUpdate
     *
     * Update an existing user..
     *
     */
    public function testUserUpdate()
    {
    }
}
