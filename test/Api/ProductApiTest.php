<?php
/**
 * ProductApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ProductApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for productGet
     *
     * Get information for a given product..
     *
     */
    public function testProductGet()
    {
    }

    /**
     * Test case for productGetByAuthor
     *
     * Get information for all products by the given author.  This is a preliminary API, subject to change..
     *
     */
    public function testProductGetByAuthor()
    {
    }

    /**
     * Test case for productGetByIsbn
     *
     * Gets information for a product, given an ISBN-13.  This is a preliminary API, subject to change..
     *
     */
    public function testProductGetByIsbn()
    {
    }

    /**
     * Test case for productGetByKeyword
     *
     * Get information for all products with the given keyword.  This is a preliminary API, subject to change..
     *
     */
    public function testProductGetByKeyword()
    {
    }

    /**
     * Test case for productGetBySearch
     *
     * Get information for all products with the given search term.  This is a preliminary API, subject to change..
     *
     */
    public function testProductGetBySearch()
    {
    }

    /**
     * Test case for productGetBySubjectTree
     *
     * Get information for all products for the given subject tree..
     *
     */
    public function testProductGetBySubjectTree()
    {
    }

    /**
     * Test case for productGetByTitle
     *
     * Get information for all products with the given title.  This is a preliminary API, subject to change..
     *
     */
    public function testProductGetByTitle()
    {
    }

    /**
     * Test case for productGetGiftMessagesSupport
     *
     * Checks to see if gift messages are supported for the given item and customer type..
     *
     */
    public function testProductGetGiftMessagesSupport()
    {
    }

    /**
     * Test case for productGetOnixData
     *
     * Gets ONIX data on a product..
     *
     */
    public function testProductGetOnixData()
    {
    }

    /**
     * Test case for productGetPrice
     *
     * Calculates what the price would be on the order line as if the particular customer   passed in ordered the item and used the passed in promotion.
     *
     */
    public function testProductGetPrice()
    {
    }

    /**
     * Test case for productGetProductContributions
     *
     * Get information for all products a customer is a contributor on..
     *
     */
    public function testProductGetProductContributions()
    {
    }

    /**
     * Test case for productGetPurchasedWith
     *
     * Get the item numbers of products purchased with given product..
     *
     */
    public function testProductGetPurchasedWith()
    {
    }

    /**
     * Test case for productGetRelated
     *
     * Get the item numbers of products related to a given product..
     *
     */
    public function testProductGetRelated()
    {
    }

    /**
     * Test case for productUpdate
     *
     * Update an existing product. This will update the name and narratives for products of any product type.  This will handle more complex changes for access, back issue, product, and subscription,  based on the populated values in the appropriate product request detail properties..
     *
     */
    public function testProductUpdate()
    {
    }
}
