<?php
/**
 * ShoppingCartApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ShoppingCartApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShoppingCartApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for shoppingCartConvertToOrder
     *
     * Convert an existing shopping cart to an Advantage Order. Usually called when preparing   to render a Checkout/Confirmation page for users..
     *
     */
    public function testShoppingCartConvertToOrder()
    {
    }

    /**
     * Test case for shoppingCartCreate
     *
     * Create a new shopping cart..
     *
     */
    public function testShoppingCartCreate()
    {
    }

    /**
     * Test case for shoppingCartDelete
     *
     * Delete an existing shopping cart with the given ID..
     *
     */
    public function testShoppingCartDelete()
    {
    }

    /**
     * Test case for shoppingCartGet
     *
     * Get the shopping cart with the given ID..
     *
     */
    public function testShoppingCartGet()
    {
    }

    /**
     * Test case for shoppingCartGetByCustomer
     *
     * Get all shopping carts for the given customer..
     *
     */
    public function testShoppingCartGetByCustomer()
    {
    }

    /**
     * Test case for shoppingCartGetItemExclusions
     *
     * Get a list of item exclusions for a given shopping card..
     *
     */
    public function testShoppingCartGetItemExclusions()
    {
    }

    /**
     * Test case for shoppingCartUpdate
     *
     * Update an existing shopping cart..
     *
     */
    public function testShoppingCartUpdate()
    {
    }
}
