<?php
/**
 * ControlGroupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ControlGroupApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ControlGroupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for controlGroupBalance
     *
     * Checks control totals to see if they match actual totals for the current control group.  An error is thrown if the control totals don't balance.  The MST120 process, which does  additional payment validation is also requested.  This process does its  validation asynchronously, but can be instructed to automatically release the control  group when it is finished.  A control group cannot be released until the control totals  balance and the payment validation has been passed..
     *
     */
    public function testControlGroupBalance()
    {
    }

    /**
     * Test case for controlGroupCloseControlGroup
     *
     * Closes a current control group preventing entry of orders into it..
     *
     */
    public function testControlGroupCloseControlGroup()
    {
    }

    /**
     * Test case for controlGroupCreateOrUpdate
     *
     * Create or Update a Control Group from a ControlGroupIn Model.
     *
     */
    public function testControlGroupCreateOrUpdate()
    {
    }

    /**
     * Test case for controlGroupGet
     *
     * Gets a Control Group base on Date and ID.
     *
     */
    public function testControlGroupGet()
    {
    }

    /**
     * Test case for controlGroupOpen
     *
     * Opens a control group enabling entry of orders into it..
     *
     */
    public function testControlGroupOpen()
    {
    }

    /**
     * Test case for controlGroupPurge
     *
     * Requests the MST830 process to delete all unposted orders in the current control group.  This process deletes the orders asynchronously..
     *
     */
    public function testControlGroupPurge()
    {
    }

    /**
     * Test case for controlGroupRelease
     *
     * Releases a current control group.  A control group must be closed and balanced before  it can be released.  Releasing a control group indicates that all orders  in the control group are done and ready to be posted..
     *
     */
    public function testControlGroupRelease()
    {
    }

    /**
     * Test case for controlGroupRemove
     *
     * Removes a Control Group.
     *
     */
    public function testControlGroupRemove()
    {
    }

    /**
     * Test case for controlGroupUnrelease
     *
     * Un-releases the current control group indicating that its orders are not yet ready  to be posted.  A control group cannot be unreleased if any of its orders have been posted..
     *
     */
    public function testControlGroupUnrelease()
    {
    }

    /**
     * Test case for controlGroupUpdate
     *
     * Update a Control Group from a ControlGroupUpdateRequest Model.
     *
     */
    public function testControlGroupUpdate()
    {
    }
}
