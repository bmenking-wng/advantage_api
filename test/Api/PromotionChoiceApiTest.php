<?php
/**
 * PromotionChoiceApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Advantage.Rest.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.20
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * PromotionChoiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PromotionChoiceApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for promotionChoiceCreateChoices
     *
     * Create a new promotion choice or many new promotion choices. All promotion choices created in this way  must be for the same promotion (i.e. same promotion code.).
     *
     */
    public function testPromotionChoiceCreateChoices()
    {
    }

    /**
     * Test case for promotionChoiceDeleteChoice
     *
     * Delete a specific promotion choice..
     *
     */
    public function testPromotionChoiceDeleteChoice()
    {
    }

    /**
     * Test case for promotionChoiceGetChoice
     *
     * Get a specific promotion choice for a product..
     *
     */
    public function testPromotionChoiceGetChoice()
    {
    }

    /**
     * Test case for promotionChoiceGetChoicesByProduct
     *
     * Get the information for the possible promotion choices for a product..
     *
     */
    public function testPromotionChoiceGetChoicesByProduct()
    {
    }

    /**
     * Test case for promotionChoiceGetChoicesByPromotion
     *
     * Get all promotion choices for a given promotion that match the searchAgument. The result of the search can  be limited to N at a time..
     *
     */
    public function testPromotionChoiceGetChoicesByPromotion()
    {
    }

    /**
     * Test case for promotionChoiceGetPostage
     *
     * Get the calculated postage amount for the delivery code on the promotion item.  This method throws an exception if the promotion choice or delivery code is not found..
     *
     */
    public function testPromotionChoiceGetPostage()
    {
    }

    /**
     * Test case for promotionChoiceGetValidPaymentMethods
     *
     * Get a list of valid payment methods for a given promotion choice..
     *
     */
    public function testPromotionChoiceGetValidPaymentMethods()
    {
    }

    /**
     * Test case for promotionChoiceGetValidPromotionChoices
     *
     * Get a list of valid promotion choices..
     *
     */
    public function testPromotionChoiceGetValidPromotionChoices()
    {
    }

    /**
     * Test case for promotionChoiceUpdateChoice
     *
     * Update a new promotion item choice..
     *
     */
    public function testPromotionChoiceUpdateChoice()
    {
    }
}
